import numpy as np
def markups():

  p1=np.zeros(3)
  p2=np.zeros(3)
  p3=np.zeros(3)

  ###f = getNode('F')  #F is the name of markups plane###
  f = getNodesByClass("vtkMRMLMarkupsPlaneNode")
  f=f[0]

  f.GetNthControlPointPositionWorld(0, p1)
  f.GetNthControlPointPositionWorld(1, p2)
  f.GetNthControlPointPositionWorld(2, p3)

  for i in range(5):
      p1[2]=p1[2]+0.6
      p2[2]=p2[2]+0.6
      p3[2]=p3[2]+0.6
      pointPositions = np.vstack((p1, p2, p3))
      planeNode = slicer.mrmlScene.AddNewNodeByClass("vtkMRMLMarkupsPlaneNode")
      slicer.util.updateMarkupsControlPointsFromArray(planeNode, pointPositions)
  
  for i in range(5):
      p1[2]=p1[2]-0.6
      p2[2]=p2[2]-0.6
      p3[2]=p3[2]-0.6
  
  for i in range(5):
      p1[2]=p1[2]-0.6
      p2[2]=p2[2]-0.6
      p3[2]=p3[2]-0.6
      pointPositions = np.vstack((p1, p2, p3))
      planeNode = slicer.mrmlScene.AddNewNodeByClass("vtkMRMLMarkupsPlaneNode")
      slicer.util.updateMarkupsControlPointsFromArray(planeNode, pointPositions)


shortcuts = [("m", lambda: markups())]

for (shortcutKey, callback) in shortcuts:
  shortcut = qt.QShortcut(slicer.util.mainWindow())
  shortcut.setKey(qt.QKeySequence(shortcutKey))
  shortcut.connect( "activated()", callback)